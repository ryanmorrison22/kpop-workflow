/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    KPop Workflow: Nextflow config file for defining module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
*/

process {
    
    withName: 'KPOPCOUNT' {
        publishDir          = [path: {"${params.output_dir}/kmer_counts"}, mode: 'copy']
        ext.args            = { "${params.extra_kpopCount}" }
        ext.args2           = { "${params.extra_kpopCountDB}" }
    }
    withName: 'KPOPCOUNT_BY_CLASS' {
        publishDir          = [path: {"${params.output_dir}/kmer_counts"}, mode: 'copy']
        ext.args            = { "${params.extra_kpopCount}" }
    }
    withName: 'KPOPCOUNT_READS' {
        publishDir          = [path: {"${params.output_dir}/kmer_counts"}, mode: 'copy']
        ext.args            = { "${params.extra_kpopCount}" }
        ext.args2           = { "${params.extra_kpopCountDB}" }
    }
    withName: 'KPOPCOUNT_READS_BY_CLASS' {
        publishDir          = [path: {"${params.output_dir}/kmer_counts"}, mode: 'copy']
        ext.args            = { "${params.extra_kpopCount}" }
        ext.args2           = { "${params.extra_kpopCountDB}" }
    }
    withName: 'KPOPCOUNT_BY_CLASS_FROM_KPOPCOUNTER' {
        publishDir          = [path: {"${params.output_dir}/kmer_counts"}, mode: 'copy']
        ext.args            = { "${params.extra_kpopCountDB}" }
    }
    withName: 'KPOPCOUNT_COMBINE_CLASS_COUNTS' {
        publishDir          = [path: {"${params.output_dir}/kmer_counts"}, mode: 'copy']
        ext.args            = { "${params.extra_kpopCountDB}" }
    }
    withName: 'KPOPTWIST' {
        publishDir          = [path: {"${params.output_dir}/KPopTwist_files"}, mode: 'copy']
        ext.args            = { "${params.extra_kpopTwist}" }
    }
    withName: 'KPOPPHYLO' {
        publishDir          = [path: {"${params.output_dir}/trees_and_metrics"}, mode: 'copy']
    }
    withName: 'GENERATE_TEST_TWISTED' {
        publishDir          = [path: {"${params.output_dir}/predictions"}, mode: 'copy']
        ext.args            = { "${params.extra_kpopCountDB}" }
        ext.args2           = { "${params.extra_kpopTwistDB}" }
    }
    withName: 'GENERATE_TEST_TWISTED_FROM_READS' {
        publishDir          = [path: {"${params.output_dir}/predictions"}, mode: 'copy']
        ext.args            = { "${params.extra_kpopCountDB}" }
        ext.args2           = { "${params.extra_kpopTwistDB}" }
    }
    withName: 'GENERATE_TEST_TWISTED_FROM_KPOPCOUNTER' {
        publishDir          = [path: {"${params.output_dir}/predictions"}, mode: 'copy']
        ext.args            = { "${params.extra_kpopCountDB}" }
        ext.args2           = { "${params.extra_kpopTwistDB}" }
    }
    withName: 'PREDICT_TEST_SET' {
        publishDir          = [path: {"${params.output_dir}/predictions"}, mode: 'copy']
        ext.args            = { "${params.pred_class_num}" }
        ext.args2           = { "${params.extra_kpopTwistDB}" }
    }
    withName: 'ASSEMBLE_FASTQS' {
        publishDir          = [path: {"${params.output_dir}/assemblies"}, mode: 'copy']
        ext.args            = { "${params.extra_flash}" }
        ext.args2           = { "${params.extra_megahit}" }
    }
    withName: 'ASSEMBLY_STATS' {
        publishDir          = [path: {"${params.output_dir}/assembly_statistics"}, mode: 'copy']
        errorStrategy       = 'ignore'
    }
    withName: 'MATCH_REFERENCE_CONTIGS' {
        publishDir          = [path: {"${params.output_dir}/matched_contig_files"}, mode: 'copy']
        ext.args            = { "${params.extra_lastz}" }
        ext.args2           = { "${params.extra_seqtk}" }
    }
    withName: 'GENERATE_KPOPTWISTED' {
        publishDir          = [path: {"${params.output_dir}/KPopTwist_files"}, mode: 'copy']
        ext.args            = { "${params.extra_kpopCountDB}" }
        ext.args2           = { "${params.extra_kpopTwistDB}" }
    }
    withName: 'KPOPTWIST_UPDATE' {
        publishDir          = [path: {"${params.output_dir}/updated_KPopTwist_files"}, mode: 'copy']
        ext.args            = { "${params.extra_kpopTwistDB}" }
    }
    withName: 'UPDATE_PLOT' {
        publishDir          = [path: {"${params.output_dir}/updated_KPopTwist_files"}, mode: 'copy']
        ext.args            = { "${params.extra_kpopPhylo}" }
    }
    withName: 'FASTQ_QC' {
        publishDir          = [path: {"${params.output_dir}/QC_trimmed_fastqs"}, mode: 'copy']
        ext.args            = { "${params.extra_trim_galore}" }
    }
    withName: 'CLUSTERING' {
        publishDir          = [path: {"${params.output_dir}/dimension_reduction"}, mode: 'copy']
        ext.kpopScale_power = { "${params.kpopScale_power}" }
    }
    withName: 'KPOPCOUNTER_SAMPLE_REDUCTION' {
        publishDir          = [path: {"${params.output_dir}/dimension_reduction"}, mode: 'copy']
        ext.args            = { "${params.extra_kpopCountDB}" }
    }
    withName: 'DOWNLOAD_SRAS' {
        publishDir          = [path: {"${params.output_dir}/downloaded_samples"}, mode: 'copy']
        errorStrategy       = { task.exitStatus in 137..140 ? 'retry' : 'terminate' }
        maxRetries          = 3
        ext.args            = { "${params.extra_prefetch}" }
    }
    withName: 'FASTERQ_DUMP' {
        publishDir          = [path: {"${params.output_dir}/downloaded_samples"}, mode: 'copy']
        errorStrategy       = { task.exitStatus in 137..140 ? 'retry' : 'terminate' }
        maxRetries          = 3
        ext.args            = { "${params.extra_fasterq_dump}" }
    }
    withName: 'INPUT_VALIDATION' {
        errorStrategy       = 'ignore'
    }
    withName: 'META_COLOURED_TREE' {
        publishDir          = [path: {"${params.output_dir}/trees_and_metrics"}, mode: 'copy']
    }
}
